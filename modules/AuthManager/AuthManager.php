<?php
//引用此页面前需先引用conf.php
error_reporting(E_ALL ^ E_DEPRECATED);
LIB('db');

class AuthManager extends DBManager{
    public function info()
    {
		//return self::GetSignalByRequestArray('us','102354',[],time(),'inf');
        return "AuthManager"; // TODO: Change the autogenerated stub
    }

	public function AuthManager(){
		
	}

	//生成/更新api口令
	public static function GenerateOrUpdateAuthToken($uid){
		$AM = new AuthManager();
		$secret = rand(100000,999999);
		$timeStamp = PRC_TIME();
		$result = $AM->UpdateDataToTableByQuery($AM->TName('tAuth'),['secret'=>$secret,'time'=>$timeStamp],self::FieldIsValue('uid',$uid));
		if(!$result){
			$AM->InsertDataToTable($AM->TName('tAuth'),['uid'=>$uid,'secret'=>$secret,'time'=>$timeStamp]);
		}
		return ['secret'=>$secret,'timeStamp'=>$timeStamp];
	}

    //检查请求签名
	public static function ConfirmRequest($module,$action,$requestArray){
		if(!isset($requestArray['signal']) || (!isset($requestArray['openid']) && !isset($requestArray['uid']))){
			return ["result"=>false,"content"=>"签名参数错误"];
		}
		$signal = $requestArray['signal'];

		$userId = (isset($requestArray['openid']))?$requestArray['openid']:$requestArray['uid'];
		$AM = new AuthManager();
        $authResult = DBResultToArray($AM->SelectDataByQuery($AM->TName('tAuth'),self::FieldIsValue('uid',$userId)),true);

        if(!empty($authResult)){
            $authResult = $authResult[0];
        }else{
            return ['result'=>false,"content"=>"秘钥错误"];
        }

        $secret = $authResult['secret'];

        $tStamp = $authResult['timeStamp'];

		$checkSignal = self::GetSignalByRequestArray($module,$secret,$requestArray,$tStamp,$action);

		if($signal == $checkSignal){
            return ["result"=>true];
        }else{
            return ["result"=>false,"content"=>"签名错误"];
        }
	}

	//计算签名
	public static function GetSignalByRequestArray($module,$secret,$requestArray,$tStamp,$action){
        if(isset($requestArray['signal'])){
            unset($requestArray['signal']);
        }
        return $checkSignal = $module.sha1($secret.json_encode($requestArray).$tStamp).$action;
    }
	
}
?>