<?php
//引用此页面前需先引用conf.php
error_reporting(E_ALL ^ E_DEPRECATED);

LIB('db');
LIB('view');

class ContractManager extends DBManager{
    public function info()
    {
        echo json_encode(self::GetMonthList(PRC_TIME(),'CO0000000001'));
        return "ContractManager"; // TODO: Change the autogenerated stub
    }

	public function ContractManager(){
		
	}

	//计算日历(购买时间,合约ID)
	public static function GetMonthList($buyTime,$cid,$needIndex=-1){
        $showtime=date("Y-m-d H:i:s", DAY_START_CELL($buyTime));
        $contract = self::GetContractInfo($cid);
        $startDayStamp = DAY_START_CELL($buyTime);
        $day = [];
        $year = "";
        $month = "";
        $monthCount = 0;
        $monthIndex = [];
        $totalCount = 0;

        for($i = 0;$i<$contract['durnation'];$i++){
            $currentDayValue = $startDayStamp+86400*$i;
            $todayYear = date("Y",$currentDayValue);
            $todayMonth = date("m",$currentDayValue);

            $currentIndex = $year.$month;
            $todayIndex = $todayYear.$todayMonth;

            if($todayIndex != $currentIndex){
                $month = $todayMonth;
                $year = $todayYear;
                $monthCount++;
                if(!in_array($todayIndex,$monthIndex)){
                    array_push($monthIndex,$todayIndex);
                }
            }

            if(!isset($day[$todayYear.$todayMonth])){
                $day[$todayYear.$todayMonth] = [];
            }

            $totalCount++;
            array_push($day[$todayYear.$todayMonth],[
                'id'=>$i+1,
                'dateStamp' =>$currentDayValue,
                'date' => date("Y-m-d",$currentDayValue),
                'Year' => $todayYear,
                'Month' => $todayMonth,
                'Day' => date("d",$currentDayValue),
                'needReply'=> ($contract['attrule']=="RELAY")
            ]);

        }

        $monthCount = count($monthIndex);
        if($needIndex > ($monthCount-1)){
            $needIndex = ($monthCount-1);
        }
        $currentMonth = $needIndex==-1?"all":$monthIndex[$needIndex];


        if($needIndex==-1){
            $dayValue = [];
            foreach ($day as $key=>$value) {
                $dayValue = array_merge($dayValue,$value);
            }
        }else{
            $dayValue = $day[$currentMonth];
        }

        return [
            'monthIndex'=>$monthIndex,
            'monthCount'=>$monthCount,
            'currentIndex'=>($needIndex==-1?"all":$needIndex),
            'currentMonth'=>$currentMonth,
            'totalDay'=>$totalCount,
            'currentDayCount'=>count($dayValue),
            'days'=>$dayValue
        ];
    }

	//获取合约主题列表
	public static function ThemeList(){
        return SnippetManager::GetAttributeFromData('OperationData','theme');
    }

    //通过合约id获取合约信息
	public static function GetContractInfo($cid){
        $COM = new ContractManager();
        return $COM->ContractInfo($cid)['contract'];
    }

	//获取合约类型表（信息）
	public function ContractList(){
        $backMsg = RESPONDINSTANCE('0');
        $result = DBResultToArray(
            $this->SelectDataByQuery($this->TName('tContract'),"1"),
            true
        );
        $backMsg['contracts'] = $result;
        $backMsg['themes'] = self::ThemeList();
        return $backMsg;
    }

    //通过合约id获取合约信息
    public function ContractInfo($cid){
        $backMsg = RESPONDINSTANCE('0');
        $result = DBResultToArray(
            $this->SelectDataByQuery($this->TName('tContract'),self::FieldIsValue('cid',$cid)),
            true
        );
        if(!empty($result)){
            $result = $result[0];
        }
        $backMsg['contract'] = $result;
        return $backMsg;
    }
}
?>