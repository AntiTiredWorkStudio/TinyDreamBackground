<?php
//引用此页面前需先引用conf.php
error_reporting(E_ALL ^ E_DEPRECATED);

LIB('db');
LIB('us');
class DreamPoolManager extends DBManager{
    public static function UpdateAllDreamPool(){
        $DBM = new DBManager();
        DBResultHandle(
            $DBM->SelectDataFromTable($DBM->TName('tPool'),[]),
            function($key,$value){
               // echo $key.'->'.$value.'</br>';
            }
        );
    }

    //池存在并且未完成互助
    public static function IsPoolRunning($pid){
        $DPM = new DreamPoolManager();
        return DBResultExist($DPM->SelectDataFromTable($DPM->TName('tPool'),
            [
                "pid"=>$pid,
                "state"=>'RUNNING',
                "_logic"=>'AND'
            ]
        ));
    }

    //查询首页显示的梦想信息
    public static function GetMainPool(){
        $DPM = new DreamPoolManager();
        $selresult = $DPM->SelectDataFromTable($DPM->TName('tPool'),
            [
                "state"=>'RUNNING',
                "_logic"=>' ',
                "_orderby"=>'cbill',
                "_orderrule"=>'DESC',
                "_Limfrom"=>0,
                '_Limto'=>1
            ]
        );
        $resultArray = DBResultToArray($selresult,true);
        if(!empty($resultArray) && isset($resultArray[0])){
            return $resultArray[0];
        }
        return [];
    }

    //购买梦想池支付成功后调用
    public static function BuyPoolPieceSuccess($pid,$piece){
        $DPM = new DreamPoolManager();
        $selresult = $DPM->SelectDataFromTable($DPM->TName('tPool'),
            [
                "pid"=>$pid,
                "state"=>'RUNNING',
                "_logic"=>'AND'
            ]
        );

        $array = DBResultToArray($selresult,true);
        if(empty($array)){
            return RESPONDINSTANCE('6','没有生效的梦想池'.$pid);
        }
        $array = $array[0];
        $ubill = $array['ubill'];
        $pcount = $array['pcount'];
        $cbill = $array['cbill'];
        $tbill = $array['tbill'];
        if(!$selresult){
            return RESPONDINSTANCE('5');
        }
        $cbillNext = $cbill+$piece*$ubill;
        if($cbillNext>$tbill){
            $DPM->FinishedPool($pid);
            return RESPONDINSTANCE('7');
        }
        $updateresult = $DPM->UpdateDataToTable($DPM->TName('tPool'),
        [
            'pcount'=>($pcount+$piece),
            'cbill'=>$cbillNext
        ],
        [
            "pid"=>$pid,
            "state"=>'RUNNING',
            "_logic"=>'AND'
        ]);
        if(!$updateresult){
            return RESPONDINSTANCE('6','没有生效的梦想池'.$pid);
        }
        return RESPONDINSTANCE('0');
    }

    public function info()
    {
        return "梦想池模块"; // TODO: Change the autogenerated stub
    }

    public function DreamPoolManager(){
        parent::__construct();
    }



    //梦想池结束生命周期
    public function FinishedPool($pid){
        $updateresult = $this->UpdateDataToTable($this->TName('tPool'),
            [
                'state'=>'FINISHED',
            ],
            [
                "pid"=>$pid,
                "state"=>'RUNNING',
                "_logic"=>'AND'
            ]);
        if(!$updateresult){
            return RESPONDINSTANCE('6','没有生效的梦想池'.$pid);
        }
        return RESPONDINSTANCE('0');
    }

    //【请求】增加梦想池
    public function Add($pid,$ptitle,$uid,$tbill,$ubill,$duration){

        //校验身份
        if(UserManager::CheckIdentity($uid,"User")){
            return RESPONDINSTANCE('8');
        }

        $insresult = $this->InsertDataToTable($this->TName('tPool'),[
            "pid"=>$pid,
            "ptitle"=>$ptitle,
            "uid"=>$uid,
            "state"=>'RUNNING',
            "tbill"=>$tbill,
            "cbill"=>0,
            "ubill"=>$ubill,
            "duration"=>$duration,
            "ptime"=>PRC_TIME(),
            "pcount"=>0
        ]);
        if($insresult){
            return RESPONDINSTANCE('0');
        }else{
            return RESPONDINSTANCE('1');
        }
    }

    //【请求】获取全部梦想池
    public function ListAllPool(){
        $condArray = [];
        DreamPoolManager::BuyPoolPieceSuccess('p01',10);
        return DBResultToArray($this->SelectDataFromTable($this->TName('tPool'),$condArray));
    }
}
?>